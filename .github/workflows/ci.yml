name: CI

on:
    push:
        branches:
            - master
            - develop
    pull_request:
    workflow_dispatch:

jobs:
    check_composer:
        name: Check composer.json
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: shivammathur/setup-php@v2
              with:
                  coverage: none
                  php-version: '8.3'
            - run: composer validate --strict --no-check-lock

    tests:
        name: "Tests on PHP ${{ matrix.php }}${{ matrix.name_suffix }}"
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3' ]
                league_version: [ '' ] # Run jobs without changing the requirement from composer.json
                name_suffix: [ '' ]
                include:
                    - php: '5.6'
                      league_version: '5.1.*'
                      name_suffix: ' with League 5.1'
                    - php: '7.4'
                      league_version: '>=8.0.0 <=8.3.1'
                      name_suffix: ' with League 8.3.1'

        steps:
            -   uses: actions/checkout@v4
            -   uses: shivammathur/setup-php@v2
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php }}"
                    ini-file: development

            -   name: Update league requirement
                if: matrix.league_version != ''
                run: composer require league/oauth2-server:"$LEAGUE_VERSION" --no-update

            -   name: Update permissions
                run: |
                    chmod 600 tests/Stubs/private.key
                    chmod 600 tests/Stubs/public.key

            -   name: Install dependencies
                run: composer update --ansi --no-progress --no-interaction

            -   name: Run tests
                run: php -d error_reporting="E_ALL & ~E_USER_DEPRECATED" vendor/bin/phpunit -v --colors=always --coverage-clover=coverage.clover

            -   name: Upload coverage
                run: 'wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover coverage.clover'
